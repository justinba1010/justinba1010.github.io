{"version":3,"sources":["game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Action","NUM","reducer","state","action","type","OpenBox","isOver","openBoxes","indexOf","box","number","permutation","Object","objectSpread","concat","toConsumableArray","isWin","trials","length","Math","floor","SetUp","name","Game","props","_React$useReducer","React","useReducer","uuid","_React$useReducer2","slicedToArray","dispatch","useEffect","uid","localStorage","getItem","random","pow","setItem","trialStore","JSON","parse","stringify","reset","react_default","a","createElement","onClick","bubbles","slice","map","trial","className","boxes","Array","from","keys","i","game_Box","open","index","message","Fragment","Grid","container","spacing","Box","view","item","num","arr","shuffle","firstHalf","secondHalf","firstHalfShuffled","secondHalfShuffled","forEach","j","_ref","toArray","m","_ref3","App","game_Game","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"kLAgBKA,uFAAM,SAANA,OAAM,qBAANA,IAAM,kBAANA,MAAM,KAKX,IAAMC,EAAM,IAEZ,SAASC,EAAQC,EAAkBC,GACjC,OAAQA,EAAOC,MACb,KAAKL,EAAOM,QACV,GAAIH,EAAMI,OACR,OAAOJ,EAET,IAA6C,IAAzCA,EAAMK,UAAUC,QAAQL,EAAOM,KAAa,CAC9C,GAAIP,EAAMQ,QAAUR,EAAMS,YAAYR,EAAOM,IAAM,GACjD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACFV,EAAK,CACRK,UAAS,GAAAO,OAAAF,OAAAG,EAAA,EAAAH,CAAMV,EAAMK,WAAS,CAAEJ,EAAOM,MACvCH,QAAQ,EACRU,OAAO,EACPC,OAAM,GAAAH,OAAAF,OAAAG,EAAA,EAAAH,CAAMV,EAAMe,QAAM,EAAE,MAG9B,IAAMX,EAASJ,EAAMK,UAAUW,QAAUC,KAAKC,MAAMpB,EAAM,GAAK,EAC3DiB,EAASf,EAAMe,OAInB,OAHIX,IACFW,EAAM,GAAAH,OAAAF,OAAAG,EAAA,EAAAH,CAAOK,GAAM,EAAE,KAEhBL,OAAAC,EAAA,EAAAD,CAAA,GAAKV,EAAK,CAAEK,UAAS,GAAAO,OAAAF,OAAAG,EAAA,EAAAH,CAAMV,EAAMK,WAAS,CAAEJ,EAAOM,MAAMH,SAAQW,WAE1E,MACF,KAAKlB,EAAOsB,MACV,OAAOT,OAAAC,EAAA,EAAAD,CAAA,GACFV,EAAK,CACRK,UAAW,GACXI,YAAaR,EAAOQ,YACpBW,KAAMnB,EAAOmB,KACbZ,OAAQP,EAAOO,OACfJ,QAAQ,EACRU,OAAO,EACPC,OAAQd,EAAOc,SAIrB,OAAOf,EAGF,IAAMqB,EAAO,SAACC,GAAqB,IAAAC,EACdC,IAAMC,WAAW1B,EAAS,CAClDM,UAAW,GACXI,YAAa,GACbiB,KAAM,GACNN,KAAM,GACNZ,OAAQ,EACRJ,QAAQ,EACRU,OAAO,EACPC,OAAQ,KACRY,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAa,EAAA,GATKvB,EAAK2B,EAAA,GAAEE,EAAQF,EAAA,GAWtBH,IAAMM,UAAU,WACd,IAAIC,EAAMC,aAAaC,QAAQ,QAC3BP,EAAO,EACPK,EACFL,GAAQK,GAERL,EAAOT,KAAKC,MAAMD,KAAKiB,SAAQjB,KAAAkB,IAAG,EAAK,KACvCH,aAAaI,QAAQ,OAAQV,EAAO,KAEtC,IAAMlB,EAASkB,EAAO5B,EAElBuC,EAAaL,aAAaC,QAAQ,UAClClB,EAAoB,GACpBsB,IACFtB,EAASuB,KAAKC,MAAMF,GAAYtB,QAGlCc,EAAS,CACP3B,KAAML,EAAOsB,MACbX,SACAkB,OACAX,SACAN,YAAaA,EAAYX,MAE1B,IAEH0B,IAAMM,UAAU,WACa,GAAvB9B,EAAMe,OAAOC,QAGjBgB,aAAaI,QAAQ,SAAUE,KAAKE,UAAU,CAAEzB,OAAQf,EAAMe,WAC7D,CAACf,EAAMe,SAEV,IAAM0B,EAAQzC,EAAMI,OACpBsC,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAMhB,EAASnB,OAAAC,EAAA,EAAAD,CAAA,GAC7BV,EAAK,CACRE,KAAKL,EAAOsB,MACZV,YAAaA,EAAYX,GACzBO,UAAW,QACN,eACD,KAEEyC,EAAU9C,EAAMe,OACnBgC,MAAM/C,EAAMe,OAAOC,OAAS,IAC5BgC,IAAI,SAACC,GAAK,OACTA,EAAQP,EAAAC,EAAAC,cAAA,QAAMM,UAAW,QAAiBR,EAAAC,EAAAC,cAAA,QAAMM,UAAW,WAEzDC,EAAQC,MAAMC,KAAKD,MAAMtD,GAAKwD,QAAQN,IAAI,SAACO,GAAS,OACxDb,EAAAC,EAAAC,cAACY,EAAG,CACFpD,OAAQJ,EAAMI,OACdqD,KAAMzD,EAAMK,UAAUC,QAAQiD,EAAI,IAAM,EACxC1B,SAAUA,EACV6B,MAAOH,EAAI,EACX9C,YAAaT,EAAMS,gBAIjBkD,EAAU3D,EAAMI,OACpBsC,EAAAC,EAAAC,cAAA,UAAK5C,EAAMc,MAAQ,WAAa,aAC9B,KAEJ,OACE4B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACElB,EAAAC,EAAAC,cAAA,8BAAsB5C,EAAMQ,QAC3BiC,EACAkB,EACAb,EACDJ,EAAAC,EAAAC,cAACiB,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,GACtBZ,KAMIa,EAAM,SAAC1C,GAOlB,IAAM2C,EAAO3C,EAAMmC,KACjBf,EAAAC,EAAAC,cAAA,QAAMM,UAAW,WAAY5B,EAAMb,YAAYa,EAAMoC,MAAQ,IAE7DpC,EAAMoC,MAER,OACEhB,EAAAC,EAAAC,cAACiB,EAAA,EAAI,CAACK,MAAI,GACRxB,EAAAC,EAAAC,cAAA,UACEM,UAAW5B,EAAMlB,OAAS,UAAY,UACtCyC,QAAS,kBACPvB,EAAMO,SAAS,CACb3B,KAAML,EAAOM,QACbI,IAAKe,EAAMoC,UAIdO,KAMT,SAASxD,EAAY0D,GACnB,IAAIC,EAAMC,EAAQjB,MAAMC,KAAKD,MAAMtD,GAAKwD,QAAQN,IAAI,SAACO,GAAC,OAAKzD,EAAMyD,KAC3De,EAAYF,EAAIrB,MAAM,EAAG9B,KAAKC,MAAMpB,EAAM,IAC1CyE,EAAaH,EAAIrB,MAAM9B,KAAKC,MAAMpB,EAAM,IAExC0E,EAAoBH,EAAQC,GAC5BG,EAAqBJ,EAAQE,GAQnC,OANAD,EAAUI,QAAQ,SAACnB,EAAGoB,GACpBP,EAAIb,EAAI,GAAKiB,EAAkBG,KAEjCJ,EAAWG,QAAQ,SAACnB,EAAGoB,GACrBP,EAAIb,EAAI,GAAKkB,EAAmBE,KAE3BP,EAKT,IAAMC,EAAU,SAAHO,GAEX,IAF4B,IAATR,EAAS1D,OAAAmE,EAAA,EAAAnE,CAAAkE,GAAN7B,MAAA,GAClB+B,EAAIV,EAAIpD,OACL8D,GAAG,CACR,IAAMvB,EAAItC,KAAKC,MAAMD,KAAKiB,SAAW4C,KAAKC,EACvB,CAACX,EAAIb,GAAIa,EAAIU,IAA/BV,EAAIU,GAAEC,EAAA,GAAEX,EAAIb,GAAEwB,EAAA,GAEjB,OAAOX,GC7LMY,MATf,WACE,OACEtC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACqC,EAAI,QCKIC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAX,GAAiD,IAA9Ca,EAAMb,EAANa,OAAQC,EAAMd,EAANc,OAAQC,EAAMf,EAANe,OAAQC,EAAMhB,EAANgB,OAAQC,EAAOjB,EAAPiB,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCHDW,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHxD,EAAAC,EAAAC,cAACF,EAAAC,EAAMwD,WAAU,KACfzD,EAAAC,EAAAC,cAACwD,EAAG,QAORlB","file":"static/js/main.2dc52329.chunk.js","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@mui/material\";\n\nexport interface GameProps {}\n\ninterface GameState {\n  openBoxes: number[];\n  permutation: number[];\n  uuid: string;\n  name: string;\n  number: number;\n  isOver: boolean;\n  isWin: boolean;\n  trials: boolean[];\n}\n\nenum Action {\n  OpenBox,\n  SetUp,\n}\n\nconst NUM = 100;\n\nfunction reducer(state: GameState, action: any) {\n  switch (action.type) {\n    case Action.OpenBox:\n      if (state.isOver) {\n        return state;\n      }\n      if (state.openBoxes.indexOf(action.box) === -1) {\n        if (state.number == state.permutation[action.box - 1]) {\n          return {\n            ...state,\n            openBoxes: [...state.openBoxes, action.box],\n            isOver: true,\n            isWin: true,\n            trials: [...state.trials, true],\n          };\n        }\n        const isOver = state.openBoxes.length >= Math.floor(NUM / 2) - 1;\n        var trials = state.trials;\n        if (isOver) {\n          trials = [...trials, false];\n        }\n        return { ...state, openBoxes: [...state.openBoxes, action.box], isOver, trials};\n      }\n      break;\n    case Action.SetUp:\n      return {\n        ...state,\n        openBoxes: [] as number[],\n        permutation: action.permutation,\n        name: action.name,\n        number: action.number,\n        isOver: false,\n        isWin: false,\n        trials: action.trials,\n      };\n      break;\n  }\n  return state;\n}\n\nexport const Game = (props: GameProps) => {\n  const [state, dispatch] = React.useReducer(reducer, {\n    openBoxes: [],\n    permutation: [],\n    uuid: \"\",\n    name: \"\",\n    number: 0,\n    isOver: false,\n    isWin: false,\n    trials: [],\n  });\n\n  React.useEffect(() => {\n    var uid = localStorage.getItem(\"uuid\");\n    var uuid = 0;\n    if (uid) {\n      uuid = +uid;\n    } else {\n      uuid = Math.floor(Math.random() * 2 ** 31);\n      localStorage.setItem(\"uuid\", uuid + \"\");\n    }\n    const number = uuid % NUM;\n\n    var trialStore = localStorage.getItem(\"trials\");\n    var trials: boolean[] = [];\n    if (trialStore) {\n      trials = JSON.parse(trialStore).trials;\n    }\n\n    dispatch({\n      type: Action.SetUp,\n      number,\n      uuid,\n      trials,\n      permutation: permutation(NUM),\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (state.trials.length == 0) {\n      return;\n    }\n    localStorage.setItem(\"trials\", JSON.stringify({ trials: state.trials }));\n  }, [state.trials]);\n\n  const reset = state.isOver ? (\n  <button onClick={() => dispatch({\n  ...state,\n  type:Action.SetUp,\n  permutation: permutation(NUM),\n  openBoxes: [],\n  })}>{\"Play Again?\"}</button>\n  ) : null;\n\n  const bubbles = state.trials\n    .slice(state.trials.length - 10)\n    .map((trial) =>\n      trial ? <span className={\"hit\"}></span> : <span className={\"miss\"}></span>\n    );\n  const boxes = Array.from(Array(NUM).keys()).map((i: number) => (\n    <Box\n      isOver={state.isOver}\n      open={state.openBoxes.indexOf(i + 1) > -1}\n      dispatch={dispatch}\n      index={i + 1}\n      permutation={state.permutation}\n    />\n  ));\n\n  const message = state.isOver ? (\n    <h2>{state.isWin ? \"You won!\" : \"You lost!\"}</h2>\n  ) : null;\n\n  return (\n    <>\n      <h2>You're Prisoner #{state.number}</h2>\n      {reset}\n      {message}\n      {bubbles}\n      <Grid container spacing={2}>\n        {boxes}\n      </Grid>\n    </>\n  );\n};\n\nexport const Box = (props: {\n  isOver: boolean;\n  open: boolean;\n  index: number;\n  dispatch: any;\n  permutation: number[];\n}) => {\n  const view = props.open ? (\n    <span className={\"clicked\"}>{props.permutation[props.index - 1]}</span>\n  ) : (\n    props.index\n  );\n  return (\n    <Grid item>\n      <button\n        className={props.isOver ? \"button2\" : \"button1\"}\n        onClick={() =>\n          props.dispatch({\n            type: Action.OpenBox,\n            box: props.index,\n          })\n        }\n      >\n        {view}\n      </button>\n    </Grid>\n  );\n};\n\nfunction permutation(num: number) {\n  let arr = shuffle(Array.from(Array(NUM).keys()).map((i) => NUM - i));\n  const firstHalf = arr.slice(0, Math.floor(NUM / 2));\n  const secondHalf = arr.slice(Math.floor(NUM / 2));\n\n  const firstHalfShuffled = shuffle(firstHalf);\n  const secondHalfShuffled = shuffle(secondHalf);\n\n  firstHalf.forEach((i, j) => {\n    arr[i - 1] = firstHalfShuffled[j];\n  });\n  secondHalf.forEach((i, j) => {\n    arr[i - 1] = secondHalfShuffled[j];\n  });\n  return arr;\n}\n\n// Fisher-Yates\n// https://decipher.dev/30-seconds-of-typescript/docs/shuffle/\nconst shuffle = ([...arr]) => {\n  let m = arr.length;\n  while (m) {\n    const i = Math.floor(Math.random() * m--);\n    [arr[m], arr[i]] = [arr[i], arr[m]];\n  }\n  return arr;\n};\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Game } from './game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Prisoner Game</h1>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}